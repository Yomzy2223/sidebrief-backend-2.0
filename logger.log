{"level":"info","message":"correct"}
{"level":"info","message":"correct logger"}
{"level":"error","message":"correct logger"}
info: Label: 19-05-2023 16:45:36: correct logger
info: Label: 19-May-2023 16:46:42: correct logger
info: Label: 19-May-2023 16:53:59: correct logger
error: Label: 19-May-2023 17:53:58: correct logger
error: Label: 19-May-2023 17:54:18: correct logger
error: Label: 19-May-2023 17:55:09: correct logger
error: Label: 19-May-2023 18:01:31: correct logger
error: Label: 19-May-2023 18:02:53: correct logger
error: Label: 19-May-2023 18:03:16: correct logger
error: Label: 19-May-2023 18:08:51: correct logger
error: Label: 19-May-2023 18:11:23: correct logger
error: Label: 19-May-2023 18:12:38: correct logger
error: Label: 20-May-2023 07:50:35: correct logger
error: Label: 20-May-2023 07:53:22: correct logger
error: Label: 20-May-2023 07:53:41: correct logger
error: Label: 20-May-2023 07:56:49: correct logger
info: Label: 20-May-2023 07:57:24: correct logger
error: Label: 20-May-2023 07:57:34: correct logger
info: Label: 20-May-2023 08:08:19: correct logger
info: Label: 20-May-2023 08:09:20: correct logger
error: Label: 20-May-2023 08:11:37: correct logger
error: Label: 20-May-2023 08:12:37: correct logger
error: Label: 20-May-2023 08:13:26: error occured while creatiing new user
error: Label: 20-May-2023 08:13:59: error occured while creatiing new user
error: Label: 20-May-2023 08:14:34: error occured while creatiing new user
error: Label: 20-May-2023 08:22:27: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 08:33:00: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 08:33:10: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 08:33:43: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 08:57:10: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 08:57:38: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 08:57:56: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 09:01:26: error occured while creatiing akinyemibamidele2@gmail.com as a user
error: Label: 20-May-2023 09:10:24: error occured while creatiing akinyemibamidele2@gmail.com as a user
info: Label: 20-May-2023 12:04:15: User created!
info: Label: 20-May-2023 12:07:02: User created!
info: Label: 20-May-2023 12:10:47: User created!
error: Label: 20-May-2023 12:11:35: error occured while creatiing akinyemibamidele21243@gmail.com as a user
info: Label: 20-May-2023 12:17:16: User fetched!
info: Label: 20-May-2023 12:17:45: User fetched!
info: Label: 20-May-2023 12:17:47: User fetched!
info: Label: 20-May-2023 12:19:36: User fetched successfuly
info: Label: 20-May-2023 13:48:23: Banks fetched successfuly
error: Label: 20-May-2023 13:48:38: error occured while creatiing undefined as a user
error: Label: 20-May-2023 13:49:37: error occured while creatiing undefined as a user
error: Label: 20-May-2023 13:50:14: error occured while creatiing undefined as a user
error: Label: 20-May-2023 13:51:02: error occured while creatiing undefined as a user
info: Label: 20-May-2023 13:52:09: Sterling Bank created successfully
info: Label: 20-May-2023 13:52:51: Banks fetched successfuly
error: Label: 20-May-2023 13:53:10: error occured while getting 
error: Label: 20-May-2023 13:54:34: error occured while getting 
info: Label: 20-May-2023 13:55:48: Bank fetched successfuly
info: Label: 20-May-2023 13:55:59: Bank fetched successfuly
info: Label: 20-May-2023 16:10:44: Bank deleted successfuly
info: Label: 20-May-2023 16:20:54: Banks fetched successfuly
info: Label: 20-May-2023 19:20:05: Sterling Bank created successfully
info: Label: 20-May-2023 19:21:09: Sterling Bank created successfully
info: Label: 20-May-2023 19:22:32: Sterling Bank created successfully
info: Label: 20-May-2023 19:37:29: Bank fetched successfuly
error: Label: 21-May-2023 00:54:50: error occured while creatiing akinyemibamidele21243@gmail.com as a user
error: Label: 21-May-2023 00:54:56: error occured while creatiing akinyemibamidele21243@gmail.com as a user
error: Label: 21-May-2023 00:55:21: error occured while creatiing akinyemibamidele21243@gmail.com as a user
error: Label: 21-May-2023 00:56:13: error occured while creatiing akinyemibamidele21243@gmail.com as a user
info: Label: 21-May-2023 00:56:39: User created!
info: Label: 21-May-2023 00:56:40: User created!
info: Label: 21-May-2023 00:56:41: User created!
error: Label: 21-May-2023 01:01:15: error occured while creatiing akinyemibamidele21243@gmail.com as a user
error: Label: 21-May-2023 01:01:16: error occured while creatiing akinyemibamidele21243@gmail.com as a user
error: Label: 21-May-2023 01:01:18: error occured while creatiing akinyemibamidele21243@gmail.com as a user
error: Label: 21-May-2023 01:02:05: error occured while creatiing akinyemibamidele21243@gmail.com as a user
info: Label: 21-May-2023 01:02:32: User created!
info: Label: 21-May-2023 01:03:00: User created!
info: Label: 21-May-2023 01:03:01: User created!
info: Label: 21-May-2023 01:05:11: User created!
info: Label: 21-May-2023 01:05:44: User created!
info: Label: 21-May-2023 01:05:55: User created!
info: Label: 21-May-2023 01:06:01: User created!
info: Label: 21-May-2023 01:06:35: User created!
info: Label: 21-May-2023 01:07:51: User created!
info: Label: 21-May-2023 01:09:32: User created!
info: Label: 21-May-2023 01:09:46: User created!
info: Label: 21-May-2023 01:20:15: User created!
info: Label: 21-May-2023 01:45:22: Bank fetched successfuly
info: Label: 21-May-2023 01:45:27: Banks fetched successfuly
error: Label: 21-May-2023 01:45:42: error occured while deleting bank 
error: Label: 21-May-2023 01:45:44: error occured while deleting bank 
error: Label: 21-May-2023 01:47:22: error occured while deleting bank 
error: Label: 21-May-2023 01:47:27: error occured while deleting bank 
error: Label: 21-May-2023 01:47:28: error occured while deleting bank 
error: Label: 21-May-2023 01:48:54: error occured while deleting bank 
error: Label: 21-May-2023 01:49:50: error occured while deleting bank 
info: Label: 21-May-2023 01:51:30: First Bank created successfully
info: Label: 21-May-2023 01:51:40: First Bank created successfully
error: Label: 21-May-2023 01:58:33: error occured while creatiin a bank
error: Label: 21-May-2023 01:59:01: error occured while creatiin a bank
error: Label: 21-May-2023 01:59:31: error occured while creatiin a bank
error: Label: 21-May-2023 01:59:45: error occured while creatiin a bank
error: Label: 21-May-2023 02:00:39: error occured while creatiin a bank
error: Label: 21-May-2023 02:01:34: error occured while creatiin a bank
error: Label: 21-May-2023 02:01:35: error occured while creatiin a bank
error: Label: 21-May-2023 02:02:38: error occured while creatiin a bank
error: Label: 21-May-2023 02:03:12: error occured while creatiin a bank
error: Label: 21-May-2023 02:05:39: error occured while creatiin a bank
error: Label: 21-May-2023 02:07:12: error occured while creatiin a bank
info: Label: 21-May-2023 02:08:00: 23335 created successfully
info: Label: 21-May-2023 21:18:40: Banks fetched successfuly
info: Label: 21-May-2023 21:54:43: Banks fetched successfuly
error: Label: 21-May-2023 23:31:19: error occured while fetching all banks
error: Label: 21-May-2023 23:34:14: error occured while fetching all banks
error: Label: 21-May-2023 23:36:22: error occured while creatiin a bank
error: Label: 21-May-2023 23:37:00: error occured while creatiin a bank
error: Label: 21-May-2023 23:37:35: error occured while creatiin a bank
error: Label: 21-May-2023 23:40:28: error occured while creatiin a bank
error: Label: 21-May-2023 23:43:59: error occured while creatiin a bank
error: Label: 21-May-2023 23:47:37: error occured while creatiin a bank
error: Label: 21-May-2023 23:48:06: error occured while creatiin a bank
error: Label: 21-May-2023 23:50:24: error occured while creatiin a bank
error: Label: 21-May-2023 23:51:47: error occured while creatiin a bank
error: Label: 21-May-2023 23:52:10: error occured while creatiin a bank
error: Label: 21-May-2023 23:53:23: error occured while creatiin a bank
error: Label: 22-May-2023 00:03:07: error occured while creatiin a bank
error: Label: 22-May-2023 00:05:23: error occured while creatiin a bank
error: Label: 22-May-2023 01:35:21: error occured while creatiin a bank
error: Label: 22-May-2023 02:00:17: error occured while creatiin a bank
error: Label: 22-May-2023 02:01:24: error occured while creatiin a bank
error: Label: 22-May-2023 02:04:11: error occured while creatiin a bank
error: Label: 22-May-2023 02:14:05: error occured while creatiin a bank
error: Label: 22-May-2023 02:14:27: error occured while creatiin a bank
error: Label: 22-May-2023 02:52:13: error occured while creatiin a bank
error: Label: 22-May-2023 02:55:58: error occured while creatiin a bank
error: Label: 22-May-2023 02:59:25: error occured while creatiin a bank
error: Label: 22-May-2023 08:43:20: error occured while creatiin a bank
error: Label: 22-May-2023 08:46:05: error occured while creatiin a bank
info: Label: 22-May-2023 08:46:52: 23335 created successfully
info: Label: 22-May-2023 08:55:40: Banks fetched successfuly
info: Label: 22-May-2023 09:03:13: Banks fetched successfuly
info: Label: 22-May-2023 09:03:19: Banks fetched successfuly
info: Label: 22-May-2023 09:04:49: Bank fetched successfuly
info: Label: 22-May-2023 09:17:48: 23335 created successfully
error: Label: 22-May-2023 10:13:06: eerrrree
error: Label: 22-May-2023 10:21:14: kddksdjdsds
error: Label: 22-May-2023 10:27:16: undefined
error: Label: 22-May-2023 10:28:22: undefined
info: Label: 22-May-2023 10:46:22: 23335 created successfully
info: Label: 22-May-2023 10:46:33: Banks fetched successfuly
info: Label: 22-May-2023 10:46:43: Bank fetched successfuly
info: Label: 22-May-2023 10:46:47: Bank fetched successfuly
info: Label: 22-May-2023 10:47:25: Banks fetched successfuly
error: Label: 22-May-2023 10:49:43: error occured while dsdfsdsfsd a bank
error: Label: 22-May-2023 10:50:09: error occured while dsdfsdsfsd a bank
error: Label: 22-May-2023 10:50:32: error occured while dsdfsdsfsd a bank
info: Label: 22-May-2023 11:02:24: Zenith Bank created successfully
error: Label: 22-May-2023 11:29:39: error occured while deleting bank 
error: Label: 22-May-2023 11:31:45: error occured while deleting bank 
error: Label: 22-May-2023 11:32:32: error occured while deleting bank 
error: Label: 22-May-2023 11:33:50: error occured while deleting bank 
error: Label: 22-May-2023 11:34:38: error occured while deleting bank 
error: Label: 22-May-2023 11:35:13: error occured while deleting bank 
error: Label: 22-May-2023 11:35:17: error occured while deleting bank 
error: Label: 22-May-2023 11:35:44: error occured while deleting bank 
error: Label: 22-May-2023 11:38:29: error occured while deleting bank 
error: Label: 22-May-2023 11:38:51: error occured while deleting bank 
error: Label: 22-May-2023 11:40:42: error occured while deleting bank 
error: Label: 22-May-2023 11:41:41: error occured while deleting bank 
error: Label: 22-May-2023 11:42:29: error occured while deleting bank 
error: Label: 22-May-2023 11:42:31: error occured while deleting bank 
error: Label: 22-May-2023 11:42:48: error occured while deleting bank 
error: Label: 22-May-2023 11:42:58: error occured while deleting bank 
error: Label: 22-May-2023 11:43:33: error occured while deleting bank 
error: Label: 22-May-2023 11:44:06: error occured while deleting bank 
error: Label: 22-May-2023 11:44:59: error occured while deleting bank 
error: Label: 22-May-2023 11:45:47: error occured while deleting bank 
info: Label: 22-May-2023 11:48:37: Zenith Bank created successfully
info: Label: 22-May-2023 11:49:15: undefined created successfully
info: Label: 22-May-2023 11:58:49: undefined created successfully
error: Label: 22-May-2023 11:59:11: error occured while fetching all banks
error: Label: 22-May-2023 12:03:22: error occured while fetching all banks
error: Label: 22-May-2023 12:03:45: error occured while fetching all banks
error: Label: 22-May-2023 12:03:47: error occured while fetching all banks
error: Label: 22-May-2023 12:04:24: error occured while fetching all banks
error: Label: 22-May-2023 12:05:21: error occured while fetching all banks
error: Label: 22-May-2023 19:19:37: error occured while creating an account for akinyemibamidele2@gmail.com with error message: ReferenceError: hash is not defined
info: Label: 22-May-2023 19:30:00: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 22-May-2023 19:59:46: error occured while updating user with error message: ReferenceError: cryptedPassword is not defined
error: Label: 22-May-2023 21:02:53: error occured while creating an account for usmansotunde@gmail.com with error message: TypeError: Cannot read properties of null (reading 'username')
info: Label: 22-May-2023 21:08:03: Usman Sotunde created an account successfully with usmansotunde@gmail.com.
info: Label: 22-May-2023 21:08:57: Usman Sotunde created an account successfully with usmansotunde2@gmail.com.
info: Label: 22-May-2023 21:18:17: User with usmansotunde2@gmail.com signed in successfully.
info: Label: 22-May-2023 21:20:20: User with usmansotunde2@gmail.com signed in successfully.
info: Label: 22-May-2023 21:20:46: User with usmansotunde2@gmail.com signed in successfully.
info: Label: 22-May-2023 21:21:12: User with usmansotunde@gmail.com signed in successfully.
info: Label: 23-May-2023 09:57:47: User with usmansotunde@gmail.com signed in successfully.
info: Label: 23-May-2023 10:09:06: User with usmansotunde@gmail.com signed in successfully.
info: Label: 23-May-2023 10:09:36: User with usmansotunde@gmail.com signed in successfully.
info: Label: 23-May-2023 10:12:16: User with usmansotunde@gmail.com signed in successfully.
info: Label: 23-May-2023 12:31:40: Bamidele Akinyemi created an account successfully with akinyemibamidele@gmail.com.
info: Label: 23-May-2023 12:44:54: Bamidele Akinyemi created an account successfully with akainyemi@sidebrief.com.
info: Label: 23-May-2023 12:45:46: staff with akainyemi@sidebrief.com signed in successfully.
info: Label: 23-May-2023 12:45:59: staff with akainyemi@sidebrief.com signed in successfully.
info: Label: 23-May-2023 12:48:47: Bamidele Akinyemi created an account successfully with akinyemibamidele@gmail.com.
info: Label: 23-May-2023 12:48:59: Bamidele Akinyemi created an account successfully with akainyemi@sidebrief.com.
info: Label: 23-May-2023 13:03:21: staff with akainyemi@sidebrief.com signed in successfully.
error: Label: 23-May-2023 13:03:46: error occured while creating a bank with error ReferenceError: bankName is not defined
error: Label: 23-May-2023 13:06:25: error occured while creating a bank with error ReferenceError: bankName is not defined
error: Label: 23-May-2023 13:08:34: error occured while creating a bank with error ReferenceError: bankName is not defined
error: Label: 23-May-2023 13:09:35: error occured while creating a bank with error ReferenceError: bankName is not defined
error: Label: 23-May-2023 13:10:49: error occured while creating a bank with error ReferenceError: bankName is not defined
info: Label: 23-May-2023 13:11:33: Providus Bank created successfully
info: Label: 23-May-2023 13:12:49: Providus Bank created successfully
info: Label: 23-May-2023 13:14:32: Providus Bank created successfully
info: Label: 23-May-2023 13:16:07: Providus Bank created successfully
info: Label: 23-May-2023 13:18:24: Providus Bank created successfully
info: Label: 23-May-2023 13:19:51: User with akinyemibamidele@gmail.com signed in successfully.
info: Label: 23-May-2023 13:20:45: Providus Bank created successfully
info: Label: 23-May-2023 13:55:52: Bamidele Akinyemi created an account successfully with akinyemibamidele@gmail.com.
info: Label: 23-May-2023 13:56:09: Bamidele Akinyemi created an account successfully with akainyemi@sidebrief.com.
info: Label: 23-May-2023 13:56:43: staff with akainyemi@sidebrief.com signed in successfully.
info: Label: 23-May-2023 13:56:55: User with akinyemibamidele@gmail.com signed in successfully.
info: Label: 23-May-2023 13:57:44: Providus Bank created successfully
error: Label: 24-May-2023 15:46:42: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:47:09: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:47:11: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:47:21: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:47:22: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:48:05: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:48:20: error occured while fetching all service category with error message: TypeError: Cannot read properties of undefined (reading 'findMany')
error: Label: 24-May-2023 15:54:09: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create({
       name: 'manage',
       ~~~~
       description: 'this is manage category',
       ~~~~~~~~~~~
     + data: ServiceCategoryCreateInput | ServiceCategoryUncheckedCreateInput
     })

Unknown arg `name` in name for type ServiceCategory. Did you mean `data`?
Unknown arg `description` in description for type ServiceCategory. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required

error: Label: 24-May-2023 15:55:54: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create({
       name: 'manage',
       ~~~~
       description: 'this is manage category',
       ~~~~~~~~~~~
     + data: ServiceCategoryCreateInput | ServiceCategoryUncheckedCreateInput
     })

Unknown arg `name` in name for type ServiceCategory. Did you mean `data`?
Unknown arg `description` in description for type ServiceCategory. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required

error: Label: 24-May-2023 15:55:56: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create({
       name: 'manage',
       ~~~~
       description: 'this is manage category',
       ~~~~~~~~~~~
     + data: ServiceCategoryCreateInput | ServiceCategoryUncheckedCreateInput
     })

Unknown arg `name` in name for type ServiceCategory. Did you mean `data`?
Unknown arg `description` in description for type ServiceCategory. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required

info: Label: 24-May-2023 15:57:49: manage created successfully
info: Label: 25-May-2023 15:43:07: onboard service category created successfully
error: Label: 25-May-2023 15:43:40: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 25-May-2023 15:43:40: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 15:45:56: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 25-May-2023 15:45:56: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
info: Label: 25-May-2023 15:46:43: manages service category created successfully
error: Label: 25-May-2023 15:50:02: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 25-May-2023 15:50:02: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
info: Label: 25-May-2023 15:51:16: testing service category created successfully
error: Label: 25-May-2023 15:51:16: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 15:53:00: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 25-May-2023 15:53:00: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 15:55:54: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 15:57:00: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 15:58:22: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 16:00:33: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 16:01:12: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
info: Label: 25-May-2023 16:02:05: testing service category created successfully
error: Label: 25-May-2023 16:02:05: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:157:63

  154 //return response to the service category controller
  155 
  156 try {
→ 157   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
error: Label: 25-May-2023 16:16:29: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:15:51

  12   description: serviceCategoryPayload.description,
  13 };
  14 console.log(values);
→ 15 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 25-May-2023 16:16:29: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:161:63

  158 //return response to the service category controller
  159 
  160 try {
→ 161   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
info: Label: 25-May-2023 16:18:08: usman service category created successfully
error: Label: 31-May-2023 13:14:51: error occured while fetching user with error message: ReferenceError: token is not defined
error: Label: 31-May-2023 13:30:40: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:12:43

   9 //create staff service
  10 const saveStaff = async (staffPayload) => {
  11   try {
→ 12     const checkStaff = await prisma.staff.findUnique({
           where: {
             email: 'akinyemi@sidebrief.com'
             ~~~~~
           }
         })

Unknown arg `email` in where.email for type StaffWhereUniqueInput. Did you mean `id`? Available args:
type StaffWhereUniqueInput {
  id?: String
  firstName?: String
}


error: Label: 31-May-2023 13:36:24: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:12:43

   9 //create staff service
  10 const saveStaff = async (staffPayload) => {
  11   try {
→ 12     const checkStaff = await prisma.staff.findUnique({
           where: {
             email: 'akinyemi@sidebrief.com'
             ~~~~~
           }
         })

Unknown arg `email` in where.email for type StaffWhereUniqueInput. Did you mean `id`? Available args:
type StaffWhereUniqueInput {
  id?: String
  firstName?: String
}


error: Label: 31-May-2023 13:36:37: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:12:43

   9 //create staff service
  10 const saveStaff = async (staffPayload) => {
  11   try {
→ 12     const checkStaff = await prisma.staff.findUnique({
           where: {
             email: 'akinyemi@sidebrief.com'
             ~~~~~
           }
         })

Unknown arg `email` in where.email for type StaffWhereUniqueInput. Did you mean `id`? Available args:
type StaffWhereUniqueInput {
  id?: String
  firstName?: String
}


error: Label: 31-May-2023 13:40:22: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:12:43

   9 //create staff service
  10 const saveStaff = async (staffPayload) => {
  11   try {
→ 12     const checkStaff = await prisma.staff.findUnique({
           where: {
             email: 'akinyemi@sidebrief.com'
             ~~~~~
           }
         })

Unknown arg `email` in where.email for type StaffWhereUniqueInput. Did you mean `id`? Available args:
type StaffWhereUniqueInput {
  id?: String
  firstName?: String
}


error: Label: 31-May-2023 13:40:35: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:12:43

   9 //create staff service
  10 const saveStaff = async (staffPayload) => {
  11   try {
→ 12     const checkStaff = await prisma.staff.findUnique({
           where: {
             email: 'akinyemi@sidebrief.com'
             ~~~~~
           }
         })

Unknown arg `email` in where.email for type StaffWhereUniqueInput. Did you mean `id`? Available args:
type StaffWhereUniqueInput {
  id?: String
  firstName?: String
}


error: Label: 31-May-2023 13:43:59: error occured while creating an account for akinyemi@sidebrief.com with error message: ReferenceError: models is not defined
error: Label: 31-May-2023 13:44:03: error occured while creating an account for akinyemi@sidebrief.com with error message: ReferenceError: models is not defined
error: Label: 31-May-2023 13:44:35: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:20:45

  17   return { error: "User with this email already exists", statusCode: 400 };
  18 }
  19 
→ 20 const checkUsername = await prisma.user.findUnique({
       where: {
         username: 'bamidele2'
         ~~~~~~~~
       }
     })

Unknown arg `username` in where.username for type UserWhereUniqueInput. Available args:

type UserWhereUniqueInput {
  id?: String
  email?: String
}


error: Label: 31-May-2023 13:44:39: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:20:45

  17   return { error: "User with this email already exists", statusCode: 400 };
  18 }
  19 
→ 20 const checkUsername = await prisma.user.findUnique({
       where: {
         username: 'bamidele2'
         ~~~~~~~~
       }
     })

Unknown arg `username` in where.username for type UserWhereUniqueInput. Available args:

type UserWhereUniqueInput {
  id?: String
  email?: String
}


error: Label: 31-May-2023 13:45:36: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:20:45

  17   return { error: "User with this email already exists", statusCode: 400 };
  18 }
  19 
→ 20 const checkUsername = await prisma.user.findUnique({
       where: {
         username: 'bamidele2'
         ~~~~~~~~
       }
     })

Unknown arg `username` in where.username for type UserWhereUniqueInput. Available args:

type UserWhereUniqueInput {
  id?: String
  email?: String
}


info: Label: 31-May-2023 13:46:35: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
info: Label: 31-May-2023 13:47:40: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
info: Label: 31-May-2023 13:57:55: Bamidele Akinyemi created an account successfully with damola@sidebrief.com.
info: Label: 31-May-2023 14:02:18: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 31-May-2023 14:02:18: error occured while creating an account for akinyemibamidele2@gmail.com with error message: ReferenceError: token is not defined
info: Label: 31-May-2023 14:03:02: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 31-May-2023 14:03:02: error occured while creating an account for akinyemibamidele2@gmail.com with error message: ReferenceError: token is not defined
info: Label: 31-May-2023 14:03:30: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 31-May-2023 14:03:30: error occured while creating an account for akinyemibamidele2@gmail.com with error message: ReferenceError: token is not defined
info: Label: 31-May-2023 14:05:27: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
info: Label: 31-May-2023 14:25:24: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
info: Label: 31-May-2023 14:26:33: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
info: Label: 31-May-2023 14:27:28: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 31-May-2023 19:14:36: error occured while verifying this user with error message: ReferenceError: verifyUserToken is not defined
error: Label: 31-May-2023 19:15:02: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:15:06: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:17:07: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 console.log(user);
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:18:00: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 console.log(user);
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:25:33: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 console.log(user);
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:25:40: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 console.log(user);
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:26:10: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 console.log(user);
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:26:12: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:230:41

  227 const userSecret = process.env.TOKEN_USER_SECRET;
  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 console.log(user);
→ 230 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

info: Label: 31-May-2023 19:28:51: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 31-May-2023 19:29:59: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:231:41

  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 
  230 console.log(user);
→ 231 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:39:56: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:231:41

  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 
  230 // console.log(user);
→ 231 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 31-May-2023 19:40:50: error occured while verifying this user with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:231:41

  228 const user = await verifyUserToken(verifyPayload, userSecret);
  229 
  230 // console.log(user);
→ 231 const checkUser = await prisma.user.findUnique({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 01-Jun-2023 14:48:04: error occured while sending reset link with error message: Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:280:36

  277 // generate reset token string
  278 // save and send the reset token the user
  279 
→ 280 const user = await prisma.user.findUnique({
        where: {
      ?   email?: String,
      ?   id?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

info: Label: 01-Jun-2023 15:24:01: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 01-Jun-2023 20:58:01: error occured while deleting this user profile with error message: Error: 
Invalid `prisma.user.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:399:48

  396   };
  397 }
  398 
→ 399 const updateUser = await prisma.user.delete({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 01-Jun-2023 20:59:49: error occured while deleting this user profile with error message: Error: 
Invalid `prisma.user.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:399:48

  396   };
  397 }
  398 
→ 399 const deleteUser = await prisma.user.delete({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 01-Jun-2023 20:59:55: error occured while deleting this user profile with error message: Error: 
Invalid `prisma.user.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:399:48

  396   };
  397 }
  398 
→ 399 const deleteUser = await prisma.user.delete({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 01-Jun-2023 20:59:58: error occured while deleting this user profile with error message: Error: 
Invalid `prisma.user.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:399:48

  396   };
  397 }
  398 
→ 399 const deleteUser = await prisma.user.delete({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 01-Jun-2023 21:00:14: error occured while deleting this user profile with error message: Error: 
Invalid `prisma.user.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:399:48

  396   };
  397 }
  398 
→ 399 const deleteUser = await prisma.user.delete({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 01-Jun-2023 21:01:09: error occured while deleting this user profile with error message: Error: 
Invalid `prisma.user.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:399:48

  396   };
  397 }
  398 console.log(user);
→ 399 const deleteUser = await prisma.user.delete({
        where: {
      ?   id?: String,
      ?   email?: String
        }
      })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

error: Label: 02-Jun-2023 19:36:06: error occured while creating an account for akinyemibamidele2@gmail.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:13:43

  10 //create staff service
  11 const saveStaff = async (staffPayload) => {
  12   try {
→ 13     const checkStaff = await prisma.staff.findUnique(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
info: Label: 04-Jun-2023 08:36:49: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 05-Jun-2023 10:30:11: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 05-Jun-2023 10:30:11: error occured while deleting service category with error message: Error: 
Invalid `prisma.serviceCategory.delete()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:158:63

  155 //return response to the service category controller
  156 
  157 try {
→ 158   const deleteCategory = await prisma.serviceCategory.delete(
An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.
info: Label: 05-Jun-2023 14:31:11: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 05-Jun-2023 14:33:05: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 05-Jun-2023 14:33:39: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 05-Jun-2023 18:52:19: Martins Luther created an account successfully with martins@gmail.com.
info: Label: 05-Jun-2023 19:03:06: West Luther created an account successfully with sleekwest@gmail.com.
error: Label: 10-Jun-2023 13:32:19: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
error: Environment variable not found: DATABASE_URL.
  -->  schema.prisma:10
   | 
 9 |   provider = "postgresql"
10 |   url      = env("DATABASE_URL")
   | 

Validation Error Count: 1
error: Label: 10-Jun-2023 13:36:07: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
error: Environment variable not found: DATABASE_URL.
  -->  schema.prisma:10
   | 
 9 |   provider = "postgresql"
10 |   url      = env("DATABASE_URL")
   | 

Validation Error Count: 1
error: Label: 10-Jun-2023 13:36:08: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
error: Environment variable not found: DATABASE_URL.
  -->  schema.prisma:10
   | 
 9 |   provider = "postgresql"
10 |   url      = env("DATABASE_URL")
   | 

Validation Error Count: 1
error: Label: 10-Jun-2023 13:42:30: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
error: Environment variable not found: DATABASE_URL.
  -->  schema.prisma:10
   | 
 9 |   provider = "postgresql"
10 |   url      = env("DATABASE_URL")
   | 

Validation Error Count: 1
error: Label: 10-Jun-2023 13:43:36: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
The table `public.ServiceCategory` does not exist in the current database.
error: Label: 11-Jun-2023 13:10:52: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 13:27:04: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 13:28:31: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 13:28:42: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 13:29:39: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 13:36:56: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 13:37:07: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 14:58:59: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 14:59:24: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 16:52:40: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:13:43

  10 //create staff service
  11 const saveStaff = async (staffPayload) => {
  12   try {
→ 13     const checkStaff = await prisma.staff.findUnique(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 16:53:14: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:13:43

  10 //create staff service
  11 const saveStaff = async (staffPayload) => {
  12   try {
→ 13     const checkStaff = await prisma.staff.findUnique(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 16:53:15: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:13:43

  10 //create staff service
  11 const saveStaff = async (staffPayload) => {
  12   try {
→ 13     const checkStaff = await prisma.staff.findUnique(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 11-Jun-2023 16:53:35: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:13:43

  10 //create staff service
  11 const saveStaff = async (staffPayload) => {
  12   try {
→ 13     const checkStaff = await prisma.staff.findUnique(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
info: Label: 11-Jun-2023 16:54:01: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
error: Label: 11-Jun-2023 16:57:08: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:31:38

  28   phone: staffPayload.phone,
  29   verified: false,
  30 };
→ 31 const staff = await prisma.staff.create(
Null constraint violation on the fields: (`resetToken`)
error: Label: 11-Jun-2023 16:57:42: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:31:38

  28   phone: staffPayload.phone,
  29   verified: false,
  30 };
→ 31 const staff = await prisma.staff.create({
       data: {
         firstName: 'Bamidele',
         lastName: 'Akinyemi',
         email: 'akinyemi@sidebrief.com',
         password: '$2a$12$OvgN/FBpZ7vY5I1ydz2SO.NrftnkuyNj1OISIDncXdrwUY/J8xx6e',
         phone: '07060797442',
         verified: false,
     +   resetToken: String,
     ?   id?: String,
     ?   createdAt?: DateTime,
     ?   updatedAt?: DateTime
       }
     })

Argument resetToken for data.resetToken is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 11-Jun-2023 17:00:54: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:31:38

  28   phone: staffPayload.phone,
  29   verified: false,
  30 };
→ 31 const staff = await prisma.staff.create({
       data: {
         firstName: 'Bamidele',
         lastName: 'Akinyemi',
         email: 'akinyemi@sidebrief.com',
         password: '$2a$12$eOHAr6UkbjuN18DAEvZMCeaYqgv5gNQ5cgELAaWJhTSyNGCzjsEmG',
         phone: '07060797442',
         verified: false,
     +   resetToken: String,
     ?   id?: String,
     ?   createdAt?: DateTime,
     ?   updatedAt?: DateTime
       }
     })

Argument resetToken for data.resetToken is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 11-Jun-2023 17:03:03: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:31:38

  28   phone: staffPayload.phone,
  29   verified: false,
  30 };
→ 31 const staff = await prisma.staff.create({
       data: {
         firstName: 'Bamidele',
         lastName: 'Akinyemi',
         email: 'akinyemi@sidebrief.com',
         password: '$2a$12$Dah7kSt.yPYyIK7ucMuzueRDAiplAi.a.5AmkJ8BHCVSnxMcOnyse',
         phone: '07060797442',
         verified: false,
     +   resetToken: String,
     ?   id?: String,
     ?   createdAt?: DateTime,
     ?   updatedAt?: DateTime
       }
     })

Argument resetToken for data.resetToken is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 11-Jun-2023 17:15:07: error occured while creating an account for akinyemi@sidebrief.com with error message: Error: 
Invalid `prisma.staff.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:31:38

  28   phone: staffPayload.phone,
  29   verified: false,
  30 };
→ 31 const staff = await prisma.staff.create({
       data: {
         firstName: 'Bamidele',
         lastName: 'Akinyemi',
         email: 'akinyemi@sidebrief.com',
         password: '$2a$12$/MYdnUPtXjn00nZhy.4OIuMJQcqPtSbWkg8noS1edu/NqyXorw/EW',
         phone: '07060797442',
         verified: false,
     +   resetToken: String,
     ?   id?: String,
     ?   createdAt?: DateTime,
     ?   updatedAt?: DateTime
       }
     })

Argument resetToken for data.resetToken is missing.

Note: Lines with + are required, lines with ? are optional.

info: Label: 11-Jun-2023 17:18:08: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
info: Label: 11-Jun-2023 17:31:23: Bamidele Akinyemi created an account successfully with test@sidebrief.com.
error: Label: 11-Jun-2023 17:38:21: error occured while creating an account for test@sidebrief.com with error message: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
error: Label: 11-Jun-2023 17:41:35: error occured while creating an account for test@sidebrief.com with error message: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
error: Label: 11-Jun-2023 17:42:18: error occured while creating an account for test@sidebrief.com with error message: ReferenceError: staffPayload is not defined
info: Label: 11-Jun-2023 17:43:25: Bamidele Akinyemi created an account successfully with akinyemibamidele2@sidebrief.com.
info: Label: 11-Jun-2023 17:43:37: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
error: Label: 11-Jun-2023 18:17:50: error occured while fetching collaborator with error message: ReferenceError: loginPayload is not defined
info: Label: 11-Jun-2023 18:18:41: collaborator with akinyemi@sidebrief.com signed in successfully.
error: Label: 11-Jun-2023 19:35:12: error occured while creating an account for undefined with error message: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
info: Label: 11-Jun-2023 19:36:24: Passport created successfully
error: Label: 11-Jun-2023 19:50:23: error occured while creating a document with error Error: 
Invalid `prisma.collaboratorDocument.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/collaborator/service.js:481:56

  478   };
  479 }
  480 
→ 481 const document = await prisma.collaboratorDocument.create(
Unique constraint failed on the fields: (`collaboratorId`)
error: Label: 11-Jun-2023 19:50:51: error occured while creating a document with error Error: 
Invalid `prisma.collaboratorDocument.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/collaborator/service.js:481:56

  478   };
  479 }
  480 
→ 481 const document = await prisma.collaboratorDocument.create(
Unique constraint failed on the fields: (`collaboratorId`)
error: Label: 11-Jun-2023 19:52:24: error occured while creating a document with error Error: 
Invalid `prisma.collaboratorDocument.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/collaborator/service.js:481:56

  478   };
  479 }
  480 
→ 481 const document = await prisma.collaboratorDocument.create(
Unique constraint failed on the fields: (`collaboratorId`)
error: Label: 11-Jun-2023 19:53:09: error occured while creating a document with error Error: 
Invalid `prisma.collaboratorDocument.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/collaborator/service.js:481:56

  478   };
  479 }
  480 
→ 481 const document = await prisma.collaboratorDocument.create(
Unique constraint failed on the fields: (`collaboratorId`)
error: Label: 11-Jun-2023 19:53:52: error occured while creating a document with error Error: 
Invalid `prisma.collaboratorDocument.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/collaborator/service.js:481:56

  478   };
  479 }
  480 
→ 481 const document = await prisma.collaboratorDocument.create(
Unique constraint failed on the fields: (`collaboratorId`)
info: Label: 11-Jun-2023 19:57:16: NIN created successfully
error: Label: 11-Jun-2023 19:57:45: error occured while creating a document with error Error: 
Invalid `prisma.collaboratorDocument.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/collaborator/service.js:481:56

  478   };
  479 }
  480 
→ 481 const document = await prisma.collaboratorDocument.create(
Unique constraint failed on the fields: (`collaboratorId`)
info: Label: 11-Jun-2023 20:02:25: Passport created successfully
info: Label: 11-Jun-2023 20:02:37: Photo created successfully
error: Label: 15-Jun-2023 17:23:20: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
error: Label: 15-Jun-2023 17:23:20: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
error: Label: 15-Jun-2023 18:30:27: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:46:51

  43 //  get the service category list from the table
  44 //  return the service category list to the service category controller
  45 try {
→ 46   const category = await prisma.serviceCategory.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
info: Label: 15-Jun-2023 18:46:34: tax service category created successfully
error: Label: 15-Jun-2023 18:48:15: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 15-Jun-2023 18:49:36: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 15-Jun-2023 18:50:11: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 15-Jun-2023 18:51:11: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 17-Jun-2023 10:05:40: error occured while fetching all users with error message: Error: 
Invalid `prisma.user.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:137:37

  134 //   //return the users list to the user controller
  135 
  136 try {
→ 137   const users = await prisma.user.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`.
error: Label: 17-Jun-2023 10:08:15: error occured while fetching all users with error message: Error: 
Invalid `prisma.user.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:137:37

  134 //   //return the users list to the user controller
  135 
  136 try {
→ 137   const users = await prisma.user.findMany(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`.
error: Label: 17-Jun-2023 10:28:39: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
error: Label: 17-Jun-2023 10:46:47: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
info: Label: 20-Jun-2023 20:36:45: Testing the server
info: Label: 22-Jun-2023 08:58:47: Bamidele Akinyemi created an account successfully with akinyemibamidele@gmail.com.
info: Label: 22-Jun-2023 12:23:16: User with akinyemibamidele@gmail.com signed in successfully.
error: Label: 23-Jun-2023 15:22:57: error occured while creating an account for akinyemibamidele4444444@gmail.com with error message: ReferenceError: cryptedPasswordss is not defined
info: Label: 24-Jun-2023 11:56:20: manages service category created successfully
error: Label: 24-Jun-2023 11:58:21: error occured while creating this service category with error Error: 
Invalid `prisma.serviceCategory.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/service/service.js:14:51

  11   name: serviceCategoryPayload.name,
  12   description: serviceCategoryPayload.description,
  13 };
→ 14 const category = await prisma.serviceCategory.create(
Unique constraint failed on the fields: (`name`)
info: Label: 24-Jun-2023 12:11:52: manages service category created successfully
info: Label: 24-Jun-2023 12:14:07: Entities service category created successfully
info: Label: 24-Jun-2023 12:15:25: Compliances service category created successfully
info: Label: 24-Jun-2023 12:15:33: Taxes service category created successfully
info: Label: 24-Jun-2023 12:15:52: Intellectual Property service category created successfully
info: Label: 24-Jun-2023 12:50:02: test service category created successfully
info: Label: 24-Jun-2023 12:52:18: test service category created successfully
info: Label: 24-Jun-2023 13:00:10: test service category created successfully
info: Label: 24-Jun-2023 13:01:48: test service category created successfully
info: Label: 24-Jun-2023 13:13:10: test service category created successfully
info: Label: 24-Jun-2023 13:14:20: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:14:34: test service category created successfully
info: Label: 24-Jun-2023 13:15:33: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:15:47: test service category created successfully
info: Label: 24-Jun-2023 13:40:52: test service category created successfully
info: Label: 24-Jun-2023 13:41:08: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:42:19: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:42:32: test service category created successfully
info: Label: 24-Jun-2023 13:45:37: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:45:51: test service category created successfully
info: Label: 24-Jun-2023 13:47:23: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:47:37: test service category created successfully
info: Label: 24-Jun-2023 13:48:52: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
info: Label: 24-Jun-2023 13:49:34: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:49:52: test service category created successfully
info: Label: 24-Jun-2023 13:52:03: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:52:05: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 24-Jun-2023 13:52:18: test service category created successfully
info: Label: 24-Jun-2023 13:53:35: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 13:53:37: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 24-Jun-2023 13:53:50: test service category created successfully
info: Label: 24-Jun-2023 14:06:49: Sterling Bank created successfully
info: Label: 24-Jun-2023 14:08:45: test created successfully
info: Label: 24-Jun-2023 14:09:00: test service category created successfully
info: Label: 24-Jun-2023 14:09:15: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 14:09:17: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 24-Jun-2023 14:27:57: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
info: Label: 24-Jun-2023 14:28:13: test service category created successfully
info: Label: 24-Jun-2023 14:28:28: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 14:28:30: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 24-Jun-2023 14:32:53: test created successfully
info: Label: 24-Jun-2023 14:33:09: test service category created successfully
info: Label: 24-Jun-2023 14:33:27: Test Test created an account successfully with test@gmail.com.
info: Label: 24-Jun-2023 14:33:29: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 24-Jun-2023 15:08:56: Bamidele Akinyemi created an account successfully with akainyemi@sidebrief.com.
info: Label: 24-Jun-2023 15:09:09: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
info: Label: 24-Jun-2023 15:13:39: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:35:44: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:37:51: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:40:18: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:40:21: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:42:43: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:44:45: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:44:48: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:44:55: test created successfully
info: Label: 25-Jun-2023 08:47:07: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 08:47:09: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:47:18: test service category created successfully
info: Label: 25-Jun-2023 08:47:29: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:47:32: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 25-Jun-2023 08:47:38: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
info: Label: 25-Jun-2023 08:50:35: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:50:39: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 25-Jun-2023 08:50:45: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
info: Label: 25-Jun-2023 08:51:02: test service category created successfully
info: Label: 25-Jun-2023 08:51:18: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 08:51:20: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:53:00: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 08:53:03: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:53:09: test created successfully
info: Label: 25-Jun-2023 08:53:25: test service category created successfully
info: Label: 25-Jun-2023 08:53:42: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 08:53:44: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 08:59:07: test service category created successfully
info: Label: 25-Jun-2023 09:02:55: test service category created successfully
info: Label: 25-Jun-2023 09:03:07: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 09:03:09: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:10:55: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 09:10:59: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:11:05: test created successfully
info: Label: 25-Jun-2023 09:11:16: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 09:11:19: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:11:39: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 09:11:41: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:12:59: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 09:13:03: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:13:10: test service category created successfully
info: Label: 25-Jun-2023 09:13:25: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 09:13:27: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:13:33: test created successfully
info: Label: 25-Jun-2023 09:13:46: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:15:46: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 09:15:48: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:15:59: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 09:16:02: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:16:07: test created successfully
info: Label: 25-Jun-2023 09:16:19: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 09:16:23: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 09:16:34: test service category created successfully
info: Label: 25-Jun-2023 09:34:42: Sterling s Bank created successfully
error: Label: 25-Jun-2023 09:35:02: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
error: Label: 25-Jun-2023 09:36:20: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
error: Label: 25-Jun-2023 09:36:47: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
error: Label: 25-Jun-2023 09:38:01: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:16:36

  13   bankUrl: bankPayload.bankUrl,
  14   bankImage: bankPayload.bankImage,
  15 };
→ 16 const bank = await prisma.bank.create(
Unique constraint failed on the fields: (`bankName`)
info: Label: 25-Jun-2023 10:03:10: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:03:13: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:03:23: test service category created successfully
info: Label: 25-Jun-2023 10:03:36: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:03:38: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 25-Jun-2023 10:03:41: error occured while creating a bank with error ReferenceError: serviceCategoryPayload is not defined
info: Label: 25-Jun-2023 10:03:58: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:04:00: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:08:46: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:08:48: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:09:01: test service category created successfully
info: Label: 25-Jun-2023 10:09:16: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:09:18: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:09:47: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:09:49: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 25-Jun-2023 10:09:52: error occured while creating a bank with error ReferenceError: serviceCategoryPayload is not defined
info: Label: 25-Jun-2023 10:10:04: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:10:06: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:10:18: test service category created successfully
info: Label: 25-Jun-2023 10:10:33: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:10:35: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:14:59: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:15:01: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:15:10: test created successfully
info: Label: 25-Jun-2023 10:15:18: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:15:21: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:15:29: test service category created successfully
info: Label: 25-Jun-2023 10:15:42: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:15:44: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:26:01: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:26:03: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:26:11: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:26:13: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:26:20: test created successfully
info: Label: 25-Jun-2023 10:26:29: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:26:32: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:26:43: test service category created successfully
info: Label: 25-Jun-2023 10:27:00: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:27:02: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 25-Jun-2023 10:28:47: error occured while fetching staff with error message: ReferenceError: token is not defined
info: Label: 25-Jun-2023 10:28:48: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:28:52: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:28:55: User with akinyemibamidele2@gmail.com signed in successfully.
error: Label: 25-Jun-2023 10:29:10: error occured while fetching staff with error message: ReferenceError: token is not defined
info: Label: 25-Jun-2023 10:29:11: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:29:15: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:29:18: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:29:30: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:29:33: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:29:39: test created successfully
info: Label: 25-Jun-2023 10:29:52: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:29:54: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:31:38: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:31:41: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:31:46: test service category created successfully
error: Label: 25-Jun-2023 10:31:58: error occured while fetching staff with error message: ReferenceError: token is not defined
info: Label: 25-Jun-2023 10:31:59: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:32:03: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:32:06: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:32:19: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:32:21: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:35:14: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:35:17: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:35:22: test created successfully
info: Label: 25-Jun-2023 10:35:36: Test Test created an account successfully with test@gmail.com.
error: Label: 25-Jun-2023 10:35:36: error occured while fetching staff with error message: ReferenceError: token is not defined
info: Label: 25-Jun-2023 10:35:37: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:35:41: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:35:44: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:35:52: test service category created successfully
info: Label: 25-Jun-2023 10:36:04: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:36:06: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:38:20: Test Test created an account successfully with test@gmail.com.
error: Label: 25-Jun-2023 10:38:20: error occured while fetching staff with error message: ReferenceError: token is not defined
info: Label: 25-Jun-2023 10:38:21: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:38:30: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:38:33: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:38:38: test created successfully
info: Label: 25-Jun-2023 10:38:46: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:38:48: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:38:58: test service category created successfully
info: Label: 25-Jun-2023 10:39:11: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:39:13: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:39:39: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:39:40: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:39:47: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:39:50: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:39:55: test created successfully
info: Label: 25-Jun-2023 10:40:03: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:40:06: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:40:15: test service category created successfully
info: Label: 25-Jun-2023 10:40:28: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:40:30: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:43:23: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:43:26: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:43:34: test service category created successfully
info: Label: 25-Jun-2023 10:43:46: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 10:43:48: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:43:54: test created successfully
info: Label: 25-Jun-2023 10:44:07: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:44:09: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 10:44:19: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 10:44:20: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 11:05:55: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 11:05:58: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 11:06:08: test service category created successfully
info: Label: 25-Jun-2023 11:06:20: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 11:06:23: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 11:06:30: test created successfully
info: Label: 25-Jun-2023 11:06:42: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 11:06:44: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 25-Jun-2023 11:06:53: Test Test created an account successfully with test@gmail.com.
info: Label: 25-Jun-2023 11:06:54: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 25-Jun-2023 12:52:27: Damola Olutoke created an account successfully with damola@gmail.com.
info: Label: 25-Jun-2023 13:03:16: Femi Oluyemo created an account successfully with femi@gmail.com.
info: Label: 25-Jun-2023 13:15:56: John Needle created an account successfully with john@gmail.com.
info: Label: 25-Jun-2023 13:26:07: tttt dsssdd created an account successfully with tttttt@gmail.com.
info: Label: 25-Jun-2023 13:36:23: clhsd sdfsd created an account successfully with sdfsdfsf@gmail.com.
info: Label: 25-Jun-2023 13:52:17: sdsddsds sdfsdsd created an account successfully with luttttt@gmail.com.
info: Label: 25-Jun-2023 14:09:21: sdfsdfs erete created an account successfully with seyivid@gmail.com.
info: Label: 25-Jun-2023 14:29:58: User with ycee@gmail.com signed in successfully.
info: Label: 01-Jul-2023 22:09:24: Sterling Bank created successfully
info: Label: 01-Jul-2023 22:10:30: First Bank created successfully
info: Label: 01-Jul-2023 22:29:31: First Bank created successfully
info: Label: 01-Jul-2023 22:46:31: Nigeria created successfully
info: Label: 01-Jul-2023 23:25:36: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
info: Label: 01-Jul-2023 23:26:30: Damola Olutoke created an account successfully with damola@gmail.com.
info: Label: 01-Jul-2023 23:27:09: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
info: Label: 01-Jul-2023 23:27:56: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:29:03: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:36:34: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:36:37: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:36:44: Test created successfully
info: Label: 01-Jul-2023 23:37:44: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:37:47: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:37:54: test created successfully
info: Label: 01-Jul-2023 23:38:09: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:38:13: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:38:21: test service category created successfully
info: Label: 01-Jul-2023 23:38:41: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:38:45: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:38:55: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:40:20: Tax service category created successfully
info: Label: 01-Jul-2023 23:45:13: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:45:16: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:45:32: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:45:35: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:45:47: test service category created successfully
info: Label: 01-Jul-2023 23:45:59: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:46:01: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:46:09: Test created successfully
info: Label: 01-Jul-2023 23:46:25: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:46:28: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:46:42: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:52:56: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:52:59: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:53:10: test service category created successfully
info: Label: 01-Jul-2023 23:53:23: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:53:26: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:53:31: Test created successfully
info: Label: 01-Jul-2023 23:53:39: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:53:42: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:54:02: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:54:03: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:54:15: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:54:17: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:57:22: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:57:25: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:57:34: test service category created successfully
info: Label: 01-Jul-2023 23:57:50: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:57:53: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:57:59: Test created successfully
info: Label: 01-Jul-2023 23:58:04: Kenya updated successfully
info: Label: 01-Jul-2023 23:58:13: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 01-Jul-2023 23:58:16: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:58:22: test created successfully
info: Label: 01-Jul-2023 23:58:39: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:58:41: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 01-Jul-2023 23:58:51: Test Test created an account successfully with test@gmail.com.
info: Label: 01-Jul-2023 23:58:53: staff with akinyemi@sidebrief.com signed in successfully.
error: Label: 04-Jul-2023 20:17:10: error occured while fetching staff with error message: Error: 
Invalid `prisma.staff.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/staff/service.js:133:38

  130 //   //return the staff to the staff controller
  131 
  132 try {
→ 133   const staff = await prisma.staff.findUnique(
Can't reach database server at `sidebrief.cluster-ck9d9gpajngq.us-east-1.rds.amazonaws.com`:`5432`

Please make sure your database server is running at `sidebrief.cluster-ck9d9gpajngq.us-east-1.rds.amazonaws.com`:`5432`.
info: Label: 04-Jul-2023 20:54:01: Testing the server
error: Label: 05-Jul-2023 14:31:04: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'Kelvin',
            lastName: 'Zuks',
            username: undefined,
            email: 'kelvinzuks@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtcPLZ8ex8n3GT_xla1IR_4xqBOcH0Yfz1sjIf9452Iu=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:32:25: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: undefined,
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:33:06: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: undefined,
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:36:20: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: undefined,
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:37:06: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 console.log("values", values);
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: undefined,
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:37:40: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 console.log("values", values);
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: 'DANIEL',
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:38:14: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 console.log("values", values);
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: 'DANIEL',
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:39:36: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 console.log("values", values);
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: 'DANIEL',
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: 0,
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:40:45: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:493:39

  490   picture: profile.photos[0].value,
  491 };
  492 console.log("values", values);
→ 493 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: 'DANIEL',
            email: 'akindanemmy2161@gmail.com',
            password: '',
            phone: '00000000',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

error: Label: 05-Jul-2023 14:46:36: error occured while updating this user profile with error message: Error: 
Invalid `prisma.user.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:495:39

  492   picture: profile.photos[0].value,
  493 };
  494 console.log("values", values);
→ 495 const newUser = await prisma.user.create({
        data: {
          values: {
          ~~~~~~
            firstName: 'AKINYEMI',
            lastName: 'DANIEL',
            username: 'DANIEL',
            email: 'akindanemmy2161@gmail.com',
            password: '$2a$12$F0FYsqAuE84hW6TrPjiweuEi5mizvy6F/p7HWjSf7mLrcwZoZYZL6',
            phone: '00000000',
            verified: false,
            referral: 'google',
            picture: 'https://lh3.googleusercontent.com/a/AAcHTtd8QY4WLUUHjZ8MQje7CrtnVT9gr_VcUu-v-tumhm_1=s96-c'
          },
      +   firstName: String,
      +   lastName: String,
      +   username: String,
      +   email: String,
      +   password: String,
      +   phone: String,
      +   verified: Boolean,
      +   referral: String,
      ?   id?: String,
      ?   picture?: String | null,
      ?   resetToken?: String | null,
      ?   createdAt?: DateTime,
      ?   updatedAt?: DateTime
        }
      })

Unknown arg `values` in data.values for type UserCreateInput. Did you mean `phone`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.
Argument username for data.username is missing.
Argument email for data.email is missing.
Argument password for data.password is missing.
Argument phone for data.phone is missing.
Argument verified for data.verified is missing.
Argument referral for data.referral is missing.

Note: Lines with + are required, lines with ? are optional.

info: Label: 05-Jul-2023 14:48:18: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 05-Jul-2023 15:01:58: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 05-Jul-2023 15:18:04: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 05-Jul-2023 15:46:04: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 05-Jul-2023 15:47:40: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 05-Jul-2023 15:51:42: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 05-Jul-2023 16:00:58: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 06-Jul-2023 10:27:14: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 06-Jul-2023 10:27:37: User with akindanemmy2161@gmail.com signed in successfully.
info: Label: 06-Jul-2023 10:28:35: AKINYEMI created an account successfully with akindanemmy2161@gmail.com.
info: Label: 06-Jul-2023 10:40:38: Bamidele created an account successfully with akinyemi@sidebrief.com.
info: Label: 06-Jul-2023 10:59:20: User with akinyemi@sidebrief.com signed in successfully.
error: Label: 06-Jul-2023 13:03:32: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 06-Jul-2023 13:22:49: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 06-Jul-2023 13:23:51: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 06-Jul-2023 13:23:53: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 06-Jul-2023 13:31:18: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Can't reach database server at `postgres`:`5432`

Please make sure your database server is running at `postgres`:`5432`.
error: Label: 06-Jul-2023 13:31:34: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Database `sidebrief` does not exist on the database server at `localhost:5432`.
error: Label: 06-Jul-2023 13:32:11: error occured while fetching all service category with error message: Error: 
Invalid `prisma.serviceCategory.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/productService/service.js:56:51

  53 //  get the service category list from the table
  54 //  return the service category list to the service category controller
  55 try {
→ 56   const category = await prisma.serviceCategory.findMany(
Database `sidebrief` does not exist on the database server at `localhost:5432`.
error: Label: 12-Jul-2023 22:55:02: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:20:36

  17     statusCode: 400,
  18   };
  19 }
→ 20 const bank = await prisma.bank.create({
       name: 'gt bank',
       ~~~~
       code: '23335',
       ~~~~
       url: 'first.com',
       ~~~
       image: 'cloudinary.com',
       ~~~~~
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `name` in name for type Bank. Did you mean `data`?
Unknown arg `code` in code for type Bank. Did you mean `data`?
Unknown arg `url` in url for type Bank.
Unknown arg `image` in image for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required

error: Label: 12-Jul-2023 22:55:39: error occured while creating a bank with error TypeError: Found non-callable @@iterator
error: Label: 12-Jul-2023 22:57:05: error occured while creating a bank with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:20:36

  17     statusCode: 400,
  18   };
  19 }
→ 20 const bank = await prisma.bank.create({
       detail: {
       ~~~~~~
         name: 'gt bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `detail` in detail for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required

info: Label: 12-Jul-2023 22:57:29: gt bank created successfully
info: Label: 12-Jul-2023 23:59:43: Bamidele Akinyemi created an account successfully with akinyemi@sidebrief.com.
info: Label: 13-Jul-2023 00:00:24: Bamidele Akinyemi created an account successfully with akinyemibamidele2@gmail.com.
error: Label: 13-Jul-2023 12:55:47: Bank with this name already exists
error: Label: 13-Jul-2023 13:04:24: Bank with this name already exists
error: Label: 13-Jul-2023 13:08:00: Bank with this name already exists
error: Label: 13-Jul-2023 13:12:15: Bank with this name already exists with error Error: Bank with this name already exists occurred when POST /banks was called
error: Label: 13-Jul-2023 13:24:04: BadRequest is not a constructor with error TypeError: BadRequest is not a constructor occurred when POST /banks was called
error: Label: 13-Jul-2023 13:29:17: Bank with this name already exists with error Error: Bank with this name already exists occurred when POST /banks was called
error: Label: 13-Jul-2023 13:29:35: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:31:00: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:35:04: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:36:03: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:38:29: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:38:38: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:39:05: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:39:35: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
error: Label: 13-Jul-2023 13:48:29: Error occured with error Error: 
Invalid `prisma.bank.create()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/bank/service.js:19:36

  16   throw new BadRequest("Bank with this name already exists");
  17 }
  18 
→ 19 const bank = await prisma.bank.create({
       bankPayload: {
       ~~~~~~~~~~~
         name: 'fcmb bank',
         code: '23335',
         url: 'first.com',
         image: 'cloudinary.com'
       },
     + data: BankCreateInput | BankUncheckedCreateInput
     })

Unknown arg `bankPayload` in bankPayload for type Bank. Did you mean `data`?
Argument data is missing.

Note: Lines with + are required
 occurred when POST /banks was called
info: Label: 13-Jul-2023 13:48:57: fcmb bank created successfully
error: Label: 13-Jul-2023 13:49:02: Bank with this name already exists with error Error: Bank with this name already exists occurred when POST /banks was called
info: Label: 13-Jul-2023 13:50:55: fcmbr bank created successfully
error: Label: 13-Jul-2023 13:53:19: Error occured with error TypeError: Cannot read properties of undefined (reading 'findMany') occurred when GET /banks was called
error: Label: 13-Jul-2023 14:08:59: Authorization token is missing. with error Error: Authorization token is missing. occurred when POST /banks was called
error: Label: 13-Jul-2023 14:10:34: Authorization token is missing. with error Error: Authorization token is missing. occurred when POST /banks was called
info: Label: 13-Jul-2023 14:11:15: staff with akinyemi@sidebrief.com signed in successfully.
error: Label: 13-Jul-2023 14:11:49: Bank with this name already exists with error Error: Bank with this name already exists occurred when POST /banks was called
info: Label: 13-Jul-2023 14:12:07: User with akinyemibamidele2@gmail.com signed in successfully.
info: Label: 13-Jul-2023 14:13:42: union bank created successfully
error: Label: 27-Jul-2023 19:29:32: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:30:28: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:30:45: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:30:46: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:30:47: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:30:48: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:31:24: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:31:24: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:81:42

  78 //   //return the country to the country controller
  79 
  80 try {
→ 81   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:31:51: Error occured with error Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:81:36

  78 //   //return the user to the user controller
  79 
  80 try {
→ 81   const user = await prisma.user.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /users/getAllUsers was called
error: Label: 27-Jul-2023 19:32:23: Error occured with error Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:81:36

  78 //   //return the user to the user controller
  79 
  80 try {
→ 81   const user = await prisma.user.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /users/getAllUsers was called
error: Label: 27-Jul-2023 19:32:25: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:71:42

  68 //   //return the country to the country controller
  69 
  70 try {
→ 71   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:32:26: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:71:42

  68 //   //return the country to the country controller
  69 
  70 try {
→ 71   const country = await prisma.country.findUnique(
Can't reach database server at `localhost`:`5432`

Please make sure your database server is running at `localhost`:`5432`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:34:30: Error occured with error Error: 
Invalid `prisma.country.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/diligence/service.js:71:42

  68 //   //return the country to the country controller
  69 
  70 try {
→ 71   const country = await prisma.country.findUnique(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:34:33: Error occured with error Error: 
Invalid `prisma.user.findUnique()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:81:36

  78 //   //return the user to the user controller
  79 
  80 try {
→ 81   const user = await prisma.user.findUnique(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`. occurred when GET /users/getAllUsers was called
error: Label: 27-Jul-2023 19:35:02: Error occured with error Error: 
Invalid `prisma.user.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:110:37

  107 //   //return the users list to the user controller
  108 
  109 try {
→ 110   const users = await prisma.user.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`. occurred when GET /users was called
error: Label: 27-Jul-2023 19:35:24: Error occured with error Error: 
Invalid `prisma.user.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:110:37

  107 //   //return the users list to the user controller
  108 
  109 try {
→ 110   const users = await prisma.user.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`. occurred when GET /users was called
error: Label: 27-Jul-2023 19:35:54: Error occured with error Error: 
Invalid `prisma.user.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/user/service.js:110:37

  107 //   //return the users list to the user controller
  108 
  109 try {
→ 110   const users = await prisma.user.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`. occurred when GET /users was called
error: Label: 27-Jul-2023 19:36:11: Error occured with error Error: 
Invalid `prisma.country.findMany()` invocation in
/Users/akinyemibamidele/Documents/Soss-v2/src/modules/country/service.js:42:44

  39 //  get the country list from the table
  40 //  return the country list to the country controller
  41 try {
→ 42   const countries = await prisma.country.findMany(
Authentication failed against database server at `localhost`, the provided database credentials for `postgres` are not valid.

Please make sure to provide valid database credentials for the database server at `localhost`. occurred when GET /countries was called
info: Label: 27-Jul-2023 19:38:41: Testing the server
info: Label: 27-Jul-2023 19:40:39: Testing the server
info: Label: 27-Jul-2023 19:41:09: Testing the server
info: Label: 27-Jul-2023 19:41:31: Testing the server
info: Label: 27-Jul-2023 19:42:12: Testing the server
error: Label: 27-Jul-2023 19:53:45: Country not found!. with error Error: Country not found!. occurred when GET /diligence/test was called
error: Label: 27-Jul-2023 19:54:12: Country not found!. with error Error: Country not found!. occurred when GET /diligence/dtest was called
error: Label: 27-Jul-2023 19:54:47: Country not found!. with error Error: Country not found!. occurred when GET /diligence/dtest was called
error: Label: 27-Jul-2023 19:54:48: Country not found!. with error Error: Country not found!. occurred when GET /diligence/dtest was called
error: Label: 27-Jul-2023 19:54:49: Country not found!. with error Error: Country not found!. occurred when GET /diligence/dtest was called
error: Label: 28-Jul-2023 12:20:42: Error occured with error ReferenceError: countries is not defined occurred when GET /diligence/nigerianBanks was called
info: Label: 28-Jul-2023 15:51:37: staff with akinyemi@sidebrief.com signed in successfully.
info: Label: 28-Jul-2023 16:19:30: staff with akinyemi@sidebrief.com signed in successfully.
