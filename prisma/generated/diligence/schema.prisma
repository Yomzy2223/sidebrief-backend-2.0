// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "./generated/diligence"
}

datasource db {
  provider = "postgresql"
  url      = env("DILIGENCE_DATABASE_URL")
}


model DiligenceUser { 
      id String @id @default(uuid())
      firstName String
      lastName String
      email String @unique
      password String
      role String
      resetToken String?
      managerId String?
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceEnterprise DiligenceEnterprise @relation(fields: [diligenceEnterpriseId], references: [id])
      diligenceEnterpriseId String 
}
model DiligenceRequest {
      id String @id @default(uuid())
      name String
      registrationNumber String
      status String
      createdBy String
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceRequestDocument DiligenceRequestDocument[]
      diligenceEnterprise DiligenceEnterprise @relation(fields: [diligenceEnterpriseId], references: [id])
      diligenceEnterpriseId String 
}

model DiligenceRequestDocument {
      id String @id @default(uuid())
      name String @unique
      type String
      description String
      link String
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceRequest DiligenceRequest @relation(fields: [diligenceRequestId], references: [id])
      diligenceRequestId String
}

model DiligenceEnterprise {
      id String @id @default(uuid())
      name String @unique
      address String
      adminEmail String @unique
      color String?
      logo String?
      backdrop String?
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceManager DiligenceManager[]
      diligenceRequest DiligenceRequest[]
      diligenceUser DiligenceUser[]
}

model DiligenceManager {
      id String @id @default(uuid())
      name String?
      location String?
      managerEmail String @unique
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceStaff DiligenceStaff[]
      diligenceEnterprise DiligenceEnterprise @relation(fields: [diligenceEnterpriseId], references: [id])
      diligenceEnterpriseId String
}

model DiligenceStaff {
      id String @id @default(uuid())
      email String @unique
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceManager DiligenceManager @relation(fields: [diligenceManagerId], references: [id])
      diligenceManagerId String
}

model NigerianBank {
      id String @id @default(uuid())
      name String
      color String?
      slug String
      logo String
      isDeprecated Boolean   @default(false)
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}


