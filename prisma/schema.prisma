// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
      id String @id @default(uuid())
      firstName String 
      lastName String
      username String
      email String @unique
      password String
      phone String
      picture String?
      verified Boolean
      referral String
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}


model Staff {
      id String @id @default(uuid())
      firstName String 
      lastName String
      email String @unique
      password String
      phone String
      verified Boolean
      picture String?
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Collaborator {
      id String @id @default(uuid())
      firstName String 
      lastName String
      email String @unique
      password String
      phone String
      picture String?
      verified Boolean
      isPartner Boolean
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      collaboratorDocument CollaboratorDocument[]
}

model CollaboratorDocument {
      id String @id @default(uuid())
      name String @unique
      type String
      description String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      collaborator Collaborator @relation(fields: [collaboratorId], references: [id])
      collaboratorId String
}
model Reward {
      id String @id @default(uuid())
      name String @unique
      url String
      descrition String 
      image String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Country {
      id String @id @default(uuid())
      name String @unique
      iso String
      currency String
      code String
      flagUrl String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Bank {
      id String @id @default(uuid())
      name String @unique
      code String
      url String
      image String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model ServiceCategory {
      id String @id @default(uuid())
      name String @unique
      description String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Notification {
      id String @id @default(uuid())
      title String
      body String
      readStatus Boolean
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model DiligenceUser { 
      id String @id @default(uuid())
      firstName String
      lastName String
      email String @unique
      password String
      role String
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}
model DiligenceRequest {
      id String @id @default(uuid())
      name String
      registrationNumber String
      status String
      createdBy String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceRequestDocument DiligenceRequestDocument[]
}

model DiligenceRequestDocument {
      id String @id @default(uuid())
      name String @unique
      type String
      description String
      link String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceRequest DiligenceRequest @relation(fields: [diligenceRequestId], references: [id])
      diligenceRequestId String
}

model DiligenceBank {
      id String @id @default(uuid())
      name String @unique
      address String
      adminEmail String @unique
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceBranch DiligenceBranch[]
}

model DiligenceBranch {
      id String @id @default(uuid())
      name String @unique
      state String
      managerEmail String @unique
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceStaff DiligenceStaff[]
      diligenceBank DiligenceBank @relation(fields: [diligenceBankId], references: [id])
      diligenceBankId String
}

model DiligenceStaff {
      id String @id @default(uuid())
      email String @unique
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      diligenceBranch DiligenceBranch @relation(fields: [diligenceBranchId], references: [id])
      diligenceBranchId String
}

model NigerianBank {
      id String @id @default(uuid())
      name String
      color String?
      slug String
      logo String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}