// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Bank {
      id String @id @default(uuid())
      bankName String @unique
      bankCode String
      bankUrl String
      bankImage String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model ServiceCategory {
      id String @id @default(uuid())
      name String @unique
      description String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}


model User {
      id String @id @default(uuid())
      firstName String 
      lastName String
      username String
      email String @unique
      password String
      phone String
      picture String?
      verified Boolean
      referral String
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}


model Staff {
      id String @id @default(uuid())
      firstName String 
      lastName String
      email String @unique
      password String
      phone String
      verified Boolean
      picture String?
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Collaborator {
      id String @id @default(uuid())
      firstName String 
      lastName String
      email String @unique
      password String
      phone String
      picture String?
      verified Boolean
      isPartner Boolean
      resetToken String?
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      collaboratorDocument CollaboratorDocument[]
}

model CollaboratorDocument {
      id String @id @default(uuid())
      documentName String 
      documentType String
      documentDescription String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
      collaborator Collaborator @relation(fields: [collaboratorId], references: [id])
      collaboratorId String
}
model Reward {
      id String @id @default(uuid())
      rewardName String 
      rewardUrl String
      rewardDescrition String @unique
      rewardImage String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Country {
      id String @id @default(uuid())
      countryName String
      countryISO String
      countryCurrency String
      countryCode String
      countryFlagUrl String
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}

model Notification {
      id String @id @default(uuid())
      title String
      body String
      readStatus Boolean
      createdAt DateTime @default(now())
      updatedAt DateTime @default(now())
}
